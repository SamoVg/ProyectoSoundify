// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Soundify.Models.dbModels;

#nullable disable

namespace Soundify.Migrations
{
    [DbContext(typeof(SoundifyContext))]
    partial class SoundifyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ApplicationUserCancion", b =>
                {
                    b.Property<int>("IdCancion")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdCancion", "IdUsuario");

                    b.ToTable("ApplicationUserCancion");
                });

            modelBuilder.Entity("MeGustum", b =>
                {
                    b.Property<int>("IdCancion")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdCancion", "IdUsuario")
                        .HasName("PK_MeGusta_1");

                    b.HasIndex("IdUsuario");

                    b.ToTable("MeGusta", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Soundify.Models.dbModels.Anuncio", b =>
                {
                    b.Property<int>("IdAnuncio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAnuncio"), 1L, 1);

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("RutaImgAnuncio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TituloAnuncio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdAnuncio");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Anuncios");
                });

            modelBuilder.Entity("Soundify.Models.dbModels.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaUnion")
                        .HasColumnType("datetime");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RutaImg")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Soundify.Models.dbModels.Cancion", b =>
                {
                    b.Property<int>("IdCancion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCancion"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeSpan>("Duracion")
                        .HasColumnType("time");

                    b.Property<DateTime>("FechaSubida")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RutaImg")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("IdCancion");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Cancion");
                });

            modelBuilder.Entity("Soundify.Models.dbModels.Categorium", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"), 1L, 1);

                    b.Property<string>("NombreCategoria")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdCategoria");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("Soundify.Models.dbModels.Descarga", b =>
                {
                    b.Property<int>("IdDescarga")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDescarga"), 1L, 1);

                    b.Property<DateTime>("FechaDescarga")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCancion")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.HasKey("IdDescarga")
                        .HasName("PK_MeGusta");

                    b.HasIndex("IdCancion");

                    b.HasIndex("IdUser");

                    b.ToTable("Descargas");
                });

            modelBuilder.Entity("Soundify.Models.dbModels.Playlist", b =>
                {
                    b.Property<int>("IdPlaylist")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPlaylist"), 1L, 1);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("NombrePlaylist")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdPlaylist");

                    b.HasIndex("IdUser");

                    b.ToTable("Playlist");
                });

            modelBuilder.Entity("Soundify.Models.dbModels.PlaylistCancion", b =>
                {
                    b.Property<int>("IdPlaylist")
                        .HasColumnType("int");

                    b.Property<int>("IdCancion")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaAgregado")
                        .HasColumnType("datetime");

                    b.HasKey("IdPlaylist", "IdCancion");

                    b.HasIndex("IdCancion");

                    b.ToTable("PlaylistCancion");
                });

            modelBuilder.Entity("Soundify.Models.dbModels.Reproduccion", b =>
                {
                    b.Property<int>("IdReproduccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdReproduccion"), 1L, 1);

                    b.Property<DateTime>("FechaReproduccion")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCancion")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdReproduccion");

                    b.HasIndex("IdCancion");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Reproduccion");
                });

            modelBuilder.Entity("MeGustum", b =>
                {
                    b.HasOne("Soundify.Models.dbModels.Cancion", null)
                        .WithMany()
                        .HasForeignKey("IdCancion")
                        .IsRequired()
                        .HasConstraintName("FK_Cancion");

                    b.HasOne("Soundify.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK_Usuario");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Soundify.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Soundify.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Soundify.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Soundify.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Soundify.Models.dbModels.Anuncio", b =>
                {
                    b.HasOne("Soundify.Models.dbModels.ApplicationUser", "IdUsuarioNavigation")
                        .WithMany("Anuncios")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK_UsuarioCreacion");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("Soundify.Models.dbModels.Cancion", b =>
                {
                    b.HasOne("Soundify.Models.dbModels.Categorium", "IdCategoriaNavigation")
                        .WithMany("Cancions")
                        .HasForeignKey("IdCategoria")
                        .IsRequired()
                        .HasConstraintName("FK_Categoria");

                    b.HasOne("Soundify.Models.dbModels.ApplicationUser", "IdUsuarioNavigation")
                        .WithMany("Cancions")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK_CancionUsuario");

                    b.Navigation("IdCategoriaNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("Soundify.Models.dbModels.Descarga", b =>
                {
                    b.HasOne("Soundify.Models.dbModels.Cancion", "IdCancionNavigation")
                        .WithMany("Descargas")
                        .HasForeignKey("IdCancion")
                        .IsRequired()
                        .HasConstraintName("FK_IdCancionDescarga");

                    b.HasOne("Soundify.Models.dbModels.ApplicationUser", "IdUserNavigation")
                        .WithMany("Descargas")
                        .HasForeignKey("IdUser")
                        .IsRequired()
                        .HasConstraintName("FK_IdUserDescarga");

                    b.Navigation("IdCancionNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("Soundify.Models.dbModels.Playlist", b =>
                {
                    b.HasOne("Soundify.Models.dbModels.ApplicationUser", "IdUserNavigation")
                        .WithMany("Playlists")
                        .HasForeignKey("IdUser")
                        .IsRequired()
                        .HasConstraintName("FK_Playlist_User");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("Soundify.Models.dbModels.PlaylistCancion", b =>
                {
                    b.HasOne("Soundify.Models.dbModels.Cancion", "IdCancionNavigation")
                        .WithMany("PlaylistCancions")
                        .HasForeignKey("IdCancion")
                        .IsRequired()
                        .HasConstraintName("FK_PlaylistCancion_Cancion");

                    b.HasOne("Soundify.Models.dbModels.Playlist", "IdPlaylistNavigation")
                        .WithMany("PlaylistCancions")
                        .HasForeignKey("IdPlaylist")
                        .IsRequired()
                        .HasConstraintName("FK_PlaylistCancion_Playlist");

                    b.Navigation("IdCancionNavigation");

                    b.Navigation("IdPlaylistNavigation");
                });

            modelBuilder.Entity("Soundify.Models.dbModels.Reproduccion", b =>
                {
                    b.HasOne("Soundify.Models.dbModels.Cancion", "IdCancionNavigation")
                        .WithMany("Reproduccions")
                        .HasForeignKey("IdCancion")
                        .IsRequired()
                        .HasConstraintName("FK_ReproduccionCancion");

                    b.HasOne("Soundify.Models.dbModels.ApplicationUser", "IdUsuarioNavigation")
                        .WithMany("Reproduccions")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK_ReproduccionUsuario");

                    b.Navigation("IdCancionNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("Soundify.Models.dbModels.ApplicationUser", b =>
                {
                    b.Navigation("Anuncios");

                    b.Navigation("Cancions");

                    b.Navigation("Descargas");

                    b.Navigation("Playlists");

                    b.Navigation("Reproduccions");
                });

            modelBuilder.Entity("Soundify.Models.dbModels.Cancion", b =>
                {
                    b.Navigation("Descargas");

                    b.Navigation("PlaylistCancions");

                    b.Navigation("Reproduccions");
                });

            modelBuilder.Entity("Soundify.Models.dbModels.Categorium", b =>
                {
                    b.Navigation("Cancions");
                });

            modelBuilder.Entity("Soundify.Models.dbModels.Playlist", b =>
                {
                    b.Navigation("PlaylistCancions");
                });
#pragma warning restore 612, 618
        }
    }
}
